services:

  redis:
    image: 'redis:alpine'
    env_file:
      - './dev/settings.env'

  postgres:
    image: "postgres:12"
    env_file:
      - './dev/settings.env'

  minio:
    image: minio/minio
    command: "server /data"
    env_file:
      - './dev/settings.env'
 
  goapi:
    build: .
    ports:
      - '8080:8080'
    command: "/bin/bash -c 'cd /src; go run api/api.go'"
    env_file:
      - './dev/settings.env'
    volumes:
      - './src:/src'
      - './dev/galaxy_ng/bin:/opt/bin'
    depends_on:
      - postgres
      - minio
      - galaxyapi

  galaxyapi:
    build: ./dev/galaxy_ng/
    command: '/opt/bin/start-api'
    env_file:
      - './dev/settings.env'
    volumes:
      - './dev/galaxy_ng/bin:/opt/bin'
      - './dev/certs:/etc/pulp/certs'
      - './dev/var.lib.pulp:/var/lib/pulp'
    depends_on:
      - minio
      - postgres
      - redis

  pulpcontent:
    build: ./dev/galaxy_ng/
    command: '/opt/bin/start-content'
    env_file:
      - './dev/settings.env'
    volumes:
      - './dev/galaxy_ng/bin:/opt/bin'
      - './dev/certs:/etc/pulp/certs'
      - './dev/var.lib.pulp:/var/lib/pulp'
    depends_on:
      - ansible

  pulpworker:
    build: ./dev/galaxy_ng/
    command: '/opt/bin/start-worker'
    env_file:
      - './dev/settings.env'
    volumes:
      - './dev/galaxy_ng/bin:/opt/bin'
      - './dev/certs:/etc/pulp/certs'
      - './dev/var.lib.pulp:/var/lib/pulp'
    depends_on:
      - ansible

  ansible:
    build: ./dev/playbooks
    command: /bin/bash -c 'cd /playbooks; ANSIBLE_STDOUT_CALLBACK=community.general.yaml ansible-playbook -v -i "localhost," -v stack.yml'
    env_file:
      - './dev/settings.env'
    volumes:
      - './dev/playbooks:/playbooks'
      - '/var/run/docker.sock:/var/run/docker.sock'
    depends_on:
      - minio
      - postgres
      - redis
      - galaxyapi

#networks:
#  galaxy_ng_default:
#    external: true
